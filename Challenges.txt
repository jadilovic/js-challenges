1. Jake je osoba od navike. On uvijek ima dorucak u 7:00 ujutro, rucak u 12:00 sati i vecera u 19:00 sati. Kreirajte funkciju koja uzima trenutno vrijeme
 kao string i racuna vrijeme do Jakeovog sljedeceg obroka. Predstavite ovo kao niz od dva elementa koji predstavljaju sate i minute.

Primjeri: 
timeToEat("14:00") ➞ [5, 0] 
// 5 sati do sljedeceg obroka, vecera

timeToEat("5:50") ➞ [1, 10] 
// 1 sat i 10 minuta do sljedeceg obroka, dorucak


2. Julije Cezar je zastitio svoje povjerljive informacije enkripcijom.Enkripcija ili sifriranje je proces u kriptografiji kojim se vrsi izmjena podataka
 tako da se poruka, odnosno informacije, ucine necitljivim za osobe koje ne posjeduju određeno znanje (kljuc). Cezarova enkripcija pomice svako slovo
 za odredjeni broj slova. Ako vas pomak odvede preko kraja abecede, samo se vratite na pocetak abecede. U slučaju rotacije za 3, w, x, y i z bi se
 mapirali u z, a, b i c. Kreirajte funkciju koja uzima string s (tekst koji treba sifrirati) i cijeli broj n (faktor rotacije). Funkcija bi trebala
 vratiti sifrirani string.


Primjeri: 
caesarCipher("middle-Out", 2) ➞ "okffng-Qwv" 
// m -> o 
// i -> k 
// d -> f 
// d -> f 
// l -> n 
// e -> g 
// - - 
// O -> Q 
// u -> w 
// t -> v


caesarCipher("Always-Look-on-the-Bright-Side-of-Life", 5) ➞ "Fqbfdx-Qttp-ts-ymj-Gwnlmy-Xnij-tk-Qnkj" 
caesarCipher("A friend in need is a friend indeed", 20) ➞ "U zlcyhx ch hyyx cm u zlcyhx chxyyx" 

Koristiti englesku abecedu. Engleska abeceda se sastoji od 26 slova: A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z.


3. Kreirajte funkciju za rotaciju dvodimenzionalne matrice od N * N, popunjenom nasumicnim elementima. Rotacija se vrsi odredjen broj puta, 
s tim ako je broj pozitivan, rotacija je u smjeru kazaljke na satu, a ako nije, onda je rotacija u suprotnom smjeru.


Primjeri: 
rotateTransform([ 
[2, 4], 
[0, 0] 
], 1);


Result:[ 
[0, 2], 
[0, 4] 
]


rotateTransform([ 
[2, 4], 
[0, 0] 
], -1);


Result:[ 
[4, 0], 
[2, 0] 
]



4. Neko je pokusao cenzurirati moje stringove zamjenom svakog samoglasnika sa zvjezdicon (*) npr. l*k* th*s(like this). Srećom, uspio sam pronaći 
samoglasnike koji su uklonjeni. Uzimajuci u obzir cenzurirani string i string cenzuriranih samoglasnika, vratite originalni necenzurirani string.



Primjeri: 
uncensor("Wh*r* d*d my v*w*ls g*?", "eeioeo") ➞ "Where did my vowels go?" 
uncensor("abcd", "") ➞ "abcd" 
uncensor("*PP*RC*S*", "UEAE") ➞ "UPPERCASE"


NOTE: 
- Proslijedjeni samoglasnici su uvijek u ispravnom redoslijedu 
- Broj proslijedjenih samoglasnika uvijek odgovara broju zvjezdica(*) u cenzurisanom stringu
